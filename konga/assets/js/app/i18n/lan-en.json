{
  "services_plugins_assigned_plugins": "Assigned plugins",
  "services_plugins_name": "Name",
  "services_plugins_consumer": "Consumer",
  "services_plugins_create": "Created",
  "services_plugins_no_data": "no data found...",
  "services_plugins_add_plugin": "add plugin",
  "services_plugins_delete": "delete",
  "services_health_checks": "Health Checks",
  "services_health_alert_info": "Administrators can also be notified via email when an API is down or unresponsive by enabling",
  "services_health_email_notifications": "Email Notifications",
  "services_health_in": "in",
  "services_health_settings": "settings",
  "services_health_danger": "You need to define an HC Endpoint in order for health checks to work",
  "services_health_hc_point": "HC Endpoint",
  "services_health_konga_will_perform": "Konga will perform a",
  "services_health_endpoint": "request to the specified endpoint every minute.",
  "services_health_notification_endpoint": "Notification Endpoint ",
  "services_health_optional": "(optional)",
  "services_health_post_small": "Konga will perform a",
  "services_health_post_request": "request to the specified endpoint the first time a health check fails and one every 15 minutes the API stays down or unresponsive.",
  "services_health_save_changes": "save changes",
  "services_health_no_info": "No info available yet...",
  "services_health_help_block": "You need to enable health checks for this API  in order to start getting HC status information.",
  "services_health_try_again": "Try again later...",
  "service_health_last_status": "Last known status",
  "service_health_healthy": "Healthy",
  "service_health_unhealthy": "Unhealthy",
  "service_health_last_checked": "Last checked",
  "service_health_last_failed": "Last failed",
  "service_health_last_notified": "Last notified",
  "service_health_uptime":"Uptime",
  "service_health_downtime": "Downtime",
  "service_details": "Service Details",
  "service_details_submit": "Submit changes",
  "service_consumers_eligible": "Eligible Consumers",
  "service_consumers_alc_auth": "List of consumers with access, based on ACLs & Auth plugins",
  "service_consumers_alert_info": "This service is neither Access Controlled or secured with an Authentication plugin.",
  "service_consumers_delete": "Delete",
  "service_consumers_no_data": "No data found...",
  "service_consumers_loading": "Loading consumers...",
  "service_add_plugin_add": "ADD PLUGIN",
  "service_add_model_create": "Create Service",
  "service_add_submit_service": "Submit Service",
  "service_add_certificates": "Add Certificates to",
  "service_add_certificates_submit": "Submit Certificates",
  "service_form_name": "Name",
  "service_optional": "optional",
  "service_form_service_name": "The service name.",
  "service_form_description": "Description",
  "service_form_tags": "Tags",
  "service_form_help_block": "Optionally add tags to the service",
  "service_shorthand_attribute": "shorthand-attribute",
  "service_form_to_set": "Shorthand attribute to set",
  "protocal": "protocal",
  "host": "host",
  "port": "port",
  "and": "and",
  "path": "path",
  "at_once": "at once.",
  "service_form_write_only": "This attribute is write-only (the Admin API never \"returns\" the url).",
  "or": "or",
  "service_form_upstream": "The protocol used to communicate with the upstream.  It can be one of",
  "service_form_semi_optional": "semi-optional",
  "service_form_server": "The host of the upstream server.",
  "service_form_port": "The upstream server port. Defaults to",
  "service_form_path_default": "The path to be used in requests to the upstream server. Empty by default.",
  "retries":"retries",
  "service_form_retries_default": "The number of retries to execute upon failure to proxy. The default is",
  "service_form_connect_timeout": "Connect timeout",
  "service_form_timeout_default": "The timeout in milliseconds for establishing a connection to your upstream server. Defaults to",
  "service_form_write_timeout": "Write timeout",
  "service_form_write_timeout_default": "The timeout in milliseconds between two successive write operations for transmitting a request to the upstream server. Defaults to",
  "service_form_read_timeout": "Read timeout",
  "service_form_read_timeout_default": "The timeout in milliseconds between two successive read operations for transmitting a request to the upstream server. Defaults to ",
  "service_form_optional": "optional",
  "service_form_optional_description": "An optional service description.",
  "routes_text_info": "You can only create routes from a service page",
  "edit": "edit",
  "delete": "delete",
  "routes_assigned_plugins": "Assigned plugins",
  "routes_add_plugin": "add plugin",
  "no_data": "no data found...",
  "route_model_submit_route": "Submit Route",
  "route_details": "Route details",
  "route_submit_changes": "Submit changes",
  "route_consumers": "Eligible Consumers",
  "route_consumers_acl_auth": "List of consumers with access, based on ACLs & Auth plugins",
  "route_consumers_alert_info": "This route is neither Access Controlled or secured with an Authentication plugin.",
  "route_consumers_load": "Loading consumers...",
  "route_add_plugin": "ADD PLUGIN",
  "route_add_certificates": "Add Certificates to ",
  "key": "key",
  "route_add_certificates_upload": "Upload the certificate .key file",
  "route_add_certificates_indication": "Server Name Indications",
  "route_add_certificates_ex": "A comma separated list of Server Name Indications. ex:",
  "route_submit_cetificates": "Submit Certificates",
  "form_route_enter": "* For hosts, paths, methods and protocols, press enter to apply every value you type",
  "name": "name",
  "form_route_the_name": "The name of the Route.",
  "form_route_add_tags": "Optionally add tags to the route",
  "form_route_list_example": "A list of domain names that match this Route. For example: example.com. At least one of hosts, paths, or methods must be set.",
  "form_route_list_paths": "A list of paths that match this Route. For example: /my-path. At least one of",
  "tags": "tags",
  "hosts": "hosts",
  "paths": "paths",
  "methods": "methods",
  "must_be_set": "must_be_set",
  "form_route_status_code": "Https redirect status code",
  "form_route_status_ie": "The status code Kong responds with when all properties of a Route match except the protocol,.e. if the protocol of the request is",
  "instead_of": "instead of",
  "location": "location",
  "form_route_header": "header is injected by Kong if the field is set to 301, 302, 307 or 308.",
  "form_route_default": "Defaults to",
  "form_route_regexes":"A number used to choose which route resolves a given request when several routes match it using regexes simultaneously.",
  "form_match_path": "When two routes match the path and have the same",
  "form_route_regex_priority": "regex_priority",
  "form_route_older_one": ", the older one (lowest ",
  "form_route_create_at": "created_at",
  "form_route_is_used": " is used.",
  "form_route_note_priority": "Note that the priority for non-regex routes is different (longer non-regex routes are matched before shorter ones).",
  "regex_priority": "Regex priority",
  "form_route_http_methods": "A list of HTTP methods that match this Route. At least one of",
  "form_route_must_be_set": "must be set.",
  "form_route_strip_path": "Strip Path",
  "form_route_via": "When matching a Route via one of the",
  "form_route_prefix_from": ", strip the matching prefix from the upstream request URL.",
  "form_route_preserve_host": "Preserve Host",
  "form_route_one_of": " When matching a Route via one of the",
  "domain_name": "domain names",
  "form_route_use_request": " use the request",
  "form_use_request": " header in the upstream request headers.",
  "form_route_by_default": "By default set to",
  "form_route_upstream": ", and the upstream Host header will be that of the Service's ",
  "protocals": "protocals",
  "form_route_default_as": "A list of the protocols this Route should allow. By default it is",
  "form_route_means": "which means that the Route accepts both. When set to",
  "form_route_request": "HTTP requests are answered with a request to upgrade to HTTPS.",
  "semi_optional": "semi-optional",
  "consumer_create": "Create consumer",
  "loading_consumer": "Loading consumers...",
  "consumer_edit_consumer": "Edit Consumer",
  "username": "username",
  "consumer_custom_id_help": "Field for storing an existing ID for the consumer, useful for mapping Kong with users in your existing database. You must send either this field or ",
  "consumer_custom_id_help2": "with the request.",
  "consumer_submit_changes": "Submit Changes",
  "consumer_model_custom_id": "The username of the consumer. You must send either this field or",
  "consumer_model_help": "Field for storing an existing ID for the consumer, useful for mapping Kong with users in your existing database. You must send either this field or",
  "consumer_model_optionally": "Optionally add tags to the consumer",
  "apis_plugins": "API PLUGINS",
  "consumer_plugins": "CONSUMER PLUGINS",
  "consumer_apis_text": "API Plugins targeting all consumers",
  "consumer_apis_plugins": "API Plugins targeting this consumer",
  "add_plugins": "ADD PLUGINS",
  "more": " MORE...",
  "editor_api": "Edit API",
  "basic_auth": "Basic Auth",
  "create_credentials": "create credentials",
  "consumer_basic_auth": "You have not created any Basic Auth credentials for this consumer yet",
  "create_api_key": "Create Api Key",
  "create_api_key_for": "Create Api Key for",
  "create_api_key_help_1": "You can optionally set your own unique",
  "create_api_key_help_2": "to authenticate the client. If missing, Kong will generate one.",
  "hmac_auth": "HMAC Auth",
  "hmac_auth_text_1": "Create HMAC credentials for",
  "required": "required",
  "hmac_auth_help_1": "The username to use in the HMAC Signature verification",
  "hmac_auth_help_2": "The secret to use in the HMAC Signature verification",
  "submit": "submit",
  "create_jwt": "Create JWT",
  "create_jwt_for": "Create JWT for",
  "create_jwt_help_1":"A unique string identifying the credential. If left out, it will be auto-generated. However, usage of this key is",
  "mandatory": "mandatory",
  "create_jwt_help_2": "while crafting your token, as specified in the next section.",
  "create_jwt_help_3": "The algorithm used to verify the token's signature. Can be",
  "if": "If",
  "algorithm": "algorithm",
  "is": "is",
  "create_jwt_help_4": "the public key (in PEM format) to use to verify the token's signature.",
  "create_jwt_help_5": "the secret used to sign JWTs for this credential. If left out, will be auto-generated. ",
  "create_jwt_help_6": "this is the private key (in PEM format) to use to verify the token's signature.",
  "create_oauth2": "Create OAuth2",
  "create_oauth2_for": "Create OAuth2 for",
  "create_oauth2_help_1": "The name to associate to the credential. In OAuth 2.0 this would be the application name.",
  "create_oauth2_help_2": "You can optionally set your own unique",
  "create_oauth2_help_3": ". If missing, the plugin will generate one.",
  "create_oauth2_help_4": "Press enter to apply every value you type",
  "create_oauth2_help_5": "The URL in your app where users will be sent after authorization",
  "hmac_auth_help_4": "You have not created any HMAC credentials for this consumer yet",
  "jwt_help_1": "You have not created any jwt credentials for this consumer yet",
  "create": "Created",
  "aip_key": "Api Keys",
  "api_key_help_1": "You have not created any keys for this consumer yet",
  "basic_auth_help_1": "Manage Basic Auth credentials for",
  "basic_auth_help_2": "The username to use in the Basic Authentication",
  "basic_auth_help_3": "The password to use in the Basic Authentication",
  "mass_assign_credentials": "Mass Assign Credentials",
  "mass_assign_help_1": "Select the type of credential to assign to all",
  "selected_consumer": "selected consumers",
  "oauth2_help_1": "You have not created any OAuth2 credentials for this consumer yet",
  "consumer_details_help_1": "The username of the consumer. You must send either this field or",
  "consumer_details_help_2": "with the request.",
  "consumer_details_help_3": "Field for storing an existing ID for the consumer, useful for mapping Kong with users in your existing database. You must send either this field or",
  "consumer_details_help_4": "Optionally add tags to the consumer",
  "submit_change": "Submit Changes",
  "add_a_group": "Add a group",
  "add_group": "Add Group",
  "add_group_text": "Add a group to this consumer",
  "group_name": "Group name",
  "group_help_1": "The name of the ACL group",
  "submit_group": "Submit group",
  "manage_group": "Manage Groups",
  "manage_group_help_1": "Manage consumer groups to use with",
  "plugin": "plugin",
  "create_group": "Create group",
  "create_group_help_1": "You have not created any ACL Groups yet.",
  "create_a_group": "Create a group",
  "add_new_plugin": "add new plugin",
  "scope": "Scope",
  "apply_to": "Apply to",
  "Created": "created",
  "all_entrypoints": "All Entrypoints",
  "not_access_controlled": "Not access controlled",
  "access_controlled": "Access Controlled",
  "secured_least_one": "Secured with at least one authentication mechanism",
  "route_plugins": "ROUTE PLUGINS",
  "route_plugins_help_1": "Route Plugins targeting this consumer",
  "edit_route": "Edit route",
  "edit_service": "Edit Service",
  "plugins": "Plugins",
  "loading_routes": "Loading routes...",
  "form_api_help_1": "The API name. If none is specified, will default to the",
  "request_host": "Request Host",
  "form_api_help_2": "The public DNS address that points to your API. For example,",
  "at_least": ". At least",
  "form_api_help_3": "or both should be specified.",
  "request_path": "Request Path",
  "form_api_help_4": " The public path that points to your API. For example,",
  "form_api_help_5": "or both should be specified.",
  "strip_request_path": "Strip Request Path",
  "form_api_help_6": "Strip the request_path value before proxying the request to the final API. For example a request made to",
  "form_api_help_7": "will be resolved to",
  "form_api_help_8": ". By default is false.",
  "preserve_host": "Preserve Host",
  "form_api_help_9": "Preserves the original",
  "form_api_help_10": "header sent by the client, instead of replacing it with the",
  "hostname": "hostname",
  "of_the": "of the",
  "form_api_help_11": ". By default is false.",
  "upstream": "Upstream",
  "form_api_help_12": "The base target URL that points to your API server, this URL will be used for proxying requests. For example,",
  "form_api_help_13": "The API name. If none is specified, will default to the",
  "form_api_help_14": "A comma-separated list of domain names that point to your API. For example:",
  "at_least_one_of": "At least one of",
  "form_api_help_15": "should be specified.",
  "uris": "Uris",
  "form_api_help_16": "A comma-separated list of URIs prefixes that point to your API. For example:",
  "form_api_help_17": "A comma-separated list of HTTP methods that point to your API. For example:",
  "form_api_help_18": "The base target URL that points to your API server, this URL will be used for proxying requests. For example,",
  "strip_uri": "Strip uri",
  "form_api_help_19": "When matching an API via one of the",
  "form_api_help_20": " prefixes, strip that matching prefix from the upstream URI to be requested. Default: ",
  "form_api_help_21": "When matching an API via one of the",
  "form_api_help_22": "domain names, make sure the request",
  "form_api_help_23": "header is forwarded to the upstream service. By default, this is",
  "and_the_upstream": "and the upstream",
  "form_api_help_24": "header will be extracted from the configured",
  "form_api_help_25": "The number of retries to execute upon failure to proxy. The default is",
  "upstream_connect_timeout": "Upstream connect timeout",
  "form_api_help_26": "The timeout in milliseconds for establishing a connection to your upstream service. Defaults to",
  "upstream_send_timeout": "Upstream send timeout",
  "form_api_help_27": "The timeout in milliseconds between two successive write operations for transmitting a request to your upstream service. Defaults to",
  "upstream_read_timeout": "Upstream read timeout",
  "form_api_help_28": "The timeout in milliseconds between two successive read operations for transmitting a request to your upstream service. Defaults to",
  "form_api_help_29": "To be enabled if you wish to only serve an API through HTTPS, on the appropriate port",
  "default": "Default",
  "http_if_terminated": "Http if terminated",
  "consider_the": "Consider the",
  "form_api_help_30": "header when enforcing HTTPS only traffic. Default:",
  "certificate": "Certificate",
  "server_name_indications": "Server Name Indications",
  "add_certificates_help_1": "A comma separated list of Server Name Indications. ex: ",
  "add": "add",
  "add_certificates_help_2": "Optionally add tags to the Certificate",
  "add_certificate": "Add Certificate",
  "loading_items": "Loading items...",
  "remove": "remove",
  "nodes": "Nodes",
  "create_connection_help_1": "Konga will connect directly to Kong's admin API.",
  "create_connection_help_2": "This method is mainly suitable for demo scenarios or internal access (ex. localhost).",
  "create_connection_help_3": "Kong's admin API",
  "should_not": "should not",
  "create_connection_help_4": "be publicly exposed.",
  "create_connection_help_5": "Konga will connect to Kong's admin via an exposed \"loop-back\" API using key authentication.",
  "create_connection_help_6": "Check out how to setup an API key based \"loop-back\" API",
  "jwt_auth": "JWT AUTH",
  "create_connection_help_7": "Konga will connect to Kong's admin via an exposed \"loop-back\" API using JWT authentication.",
  "create_connection_help_8": "Check out how to setup a JWT based \"loop-back\" API",
  "connection": "connection",
  "create_connection_help_9": "Konga will connect directly to Kong's admin API.",
  "create_connection_help_10": "This method is mainly suitable for demo scenarios or internal access (ex. localhost).",
  "create_connection_help_11": "Kong's admin API",
  "create_connection_help_12": "Konga will connect to Kong's admin via an exposed \"loop-back\" API using key authentication.",
  "create_connection_help_13": "Check out how to setup an API key based \"loop-back\" API",
  "create_connection_help_14": "Konga will connect to Kong's admin via an exposed \"loop-back\" API using JWT authentication.",
  "create_connection_help_15": "Check out how to setup a JWT based \"loop-back\" API",
  "checking_connection": "Checking Connection",
  "Creating": "Creating",
  "create_connection": "create connection",
  "choose_connection": "Choose connection",
  "kong_admin": "Kong admin",
  "kong_version": "Kong version",
  "choose_connetion_type": "Choose a connection type.",
  "new_connection": "new connection",
  "no_connection": "No connections found...",
  "health_checks": "Health Checks",
  "node_status_help_1": "You need to enable health checks for this node in order to start getting status information.",
  "try_again_later": "Try again later...",
  "node_status_help_2": "Administrators can also be notified via email when a connection is down or unresponsive by enabling",
  "email_notifications": "Email Notifications",
  "in": "in",
  "settings": "settings",
  "testing_node": "Testing node",
  "node_status_help_3": "Successfully connected to node!",
  "connection_failed": "Connection failed!",
  "node_status_help_4": "It seems that the node is not accessible.",
  "health_add_certificates_help_1": "Upload the certificate file",
  "health_add_certificates_help_2": "Upload the certificate .key file",
  "health_add_certificates_help_3": "A comma separated list of Server Name Indications. ex:",
  "health_add_certificates_help_4": " The API does not exist anymore.",
  "optional": "optional",
  "add_global_plugins": "Add global plugins",
  "default_help_1": "The CONSUMER ID that this plugin configuration will target. This value can only be used if authentication has been enabled so that the system can identify the user making the request. If left blank, the plugin will be applied to all consumers.",
  "tip": "Tip",
  "press": "Press",
  "default_help_2": "to accept a value.",
  "response_help_1": "The CONSUMER ID that this plugin configuration will target. This value can only be used if authentication has been enabled so that the system can identify the user making the request. If left blank, the plugin will be applied to all consumers.",
  "response_help_2": "The IP address or host name to send data to",
  "response_help_3": "The port to send data to on the upstream server. By default, statsd uses UDP.",
  "prefix": "Prefix",
  "response_help_4": "String to be prefixed to each metric's name.",
  "metrics": "Metrics",
  "stat_type": "Stat type",
  "sample_rate": "Sample rate",
  "consumer_identifier": "Consumer identifier",
  "add_metric": "add metric",
  "add_plugin": "add plugin",
  "submit_changes": "submit changes",
  "add_plugin_1": "ADD PLUGIN",
  "configure": "Configure",
  "general_settings": "General settings",
  "dashboard_refresh_interval": "Dashboard refresh interval",
  "index_help_1": "The interval in milliseconds at which the Dashboard data will refresh. If set to 0, polling will be disabled.",
  "base_url": "Base URL",
  "index_help_2": "Konga uses the",
  "index_help_3": "for generating links (ex. Account activation link). If left blank, the server's",
  "index_help_4": "will be used.",
  "sign_up_restrictions": "Sign up restrictions",
  "index_help_5": "Allow users to sign up.",
  "index_help_6": "If enabled, users will be allowed to sign up.",
  "index_help_7": "Send activation email.",
  "index_help_8": "If enabled, an activation email will be sent to the user. If not, the user will be activated automatically.",
  "notifications": "Notifications",
  "email": "EMAIL",
  "setup_email_notifications": "Setup Email notifications.",
  "default_sender_name": "Default sender name",
  "default_sender_address": "Default sender address",
  "index_help_9": "Configure email transports and select the one to use. You can disable email notifations by disabling all transports.",
  "index_help_10": "3RD-PARTY INTEGRATIONS",
  "index_help_11": "Integrate Konga with 3rd party applications.",
  "index_help_12": "Send notifications to Slack using Webhooks.",
  "configure1": "CONFIGURE",
  "notify_administrators_when": "Notify Administrators when",
  "user_permissions": "User permissions",
  "save_settings": "save settings",
  "How_does_it_work": "How does it work?",
  "alert_help_1": "Behind the scenes, Konga will poll",
  "every_minute": "every minute",
  "alert_help_2": "and trigger an alert if the results contain targets with",
  "statuses": "statuses",
  "alert_help_3": "Bare in mind that Upstream health checks must be enabled and configured accordingly in the",
  "tab": "tab",
  "alert_help_4": "Alerting is disabled. Switch alerts ON to enable them.",
  "alert_help_5": "What should I do when an alert is triggered?",
  "email_administrators": "Email administrators",
  "alert_help_6": "Emails have to be properly set up under",
  "alert_help_7": "Send notification to Slack",
  "alert_help_8": "Integration with slack has to be properly set up under",
  "alert_triggers": "Alert triggers",
  "upstream_form_help_1": "This is a hostname like name that can be referenced in an",
  "field_of_an": "field of an",
  "or_the": "or the",
  "of_a_service": "of a service.",
  "upstream_form_help_2": "Optionally add tags to the Upstream",
  "hash_on": "Hash on",
  "none": "none",
  "consumer": "consumer",
  "header": "header",
  "cookie": "cookie",
  "upstream_form_help_3": "What to use as hashing input:",
  "upstream_form_help_4": "resulting in a weighted-round-robin scheme).",
  "upstream_form_help_5": "(defaults to",
  "hash_fallback": "Hash fallback",
  "upstream_form_help_6": "What to use as hashing input if the primary",
  "upstream_form_help_7": "does not return a hash (eg. header is missing, or no consumer identified)",
  "hash_on_header": "Hash on header",
  "upstream_form_help_8": "The header name to take the value from as hash input. Only required when",
  "is_set_to": "is set to",
  "upstream_form_help_9": "The header name to take the value from as hash input. Only required when",
  "hash_on_cookie": "Hash on cookie",
  "upstream_form_help_10": "The cookie name to take the value from as hash input.",
  "only_required_when": "Only required when",
  "upstream_form_help_11": "If the specified cookie is not in the request, Kong will generate a value and set the cookie in the response.",
  "hash_on_cookie_path": "Hash on cookie path",
  "upstream_form_help_12": "The cookie path to set in the response headers.",
  "upstream_form_help_13": "is set to cookie. Defaults to",
  "slots": "Slots",
  "upstream_form_help_14": "The number of slots in the loadbalancer algorithm",
  "defaults_to": ", defaults to",
  "orderlist": "Orderlist",
  "upstream_form_help_15": "A list of sequential, but randomly ordered, integer numbers that determine the distribution of the slots in the balancer. If omitted it will be generated. If given, it must have exactly",
  "number_of_entries.": "number of entries.",
  "active_health_checks": "Active health checks",
  "verify_https_certificate": "Verify https certificate",
  "upstream_form_help_16": "Whether to check the validity of the SSL certificate of the remote host when performing active health checks using HTTPS.",
  "Defaults_to": "Defaults to",
  "upstream_form_help_17": "An array of HTTP statuses to consider a failure, indicating unhealthiness, when returned by a probe in active health checks.",
  "unhealthy_TCP_failures": "Unhealthy TCP failures",
  "upstream_form_help_18": "Number of TCP failures in active probes to consider a target unhealthy.",
  "unhealthy_timeouts": "Unhealthy timeouts",
  "upstream_form_help_19": "Number of timeouts in active probes to consider a target unhealthy.",
  "unhealthy_HTTP_failures": "Unhealthy HTTP failures",
  "upstream_form_help_20": "Number of HTTP failures in active probes (as defined by",
  "to_consider_target": "to consider a target unhealthy.",
  "unhealthy_interval": "Unhealthy interval",
  "upstream_form_help_21": "Interval between active health checks for unhealthy targets (in seconds). A value of zero indicates that active probes for healthy targets should not be performed.",
  "upstream_form_help_22": "The path that should be used when issuing the HTTP GET request to the target. The default value is",
  "timeout": "Timeout",
  "upstream_form_help_23": "The connection timeout limit for the HTTP GET request of the probe. The default value is 1 second.",
  "upstream_form_help_24": "An array of HTTP statuses to consider a success, indicating healthiness, when returned by a probe in active health checks.",
  "healthy_interval": "Healthy interval",
  "healthy_successes": "Healthy successes",
  "upstream_form_help_25": "Number of successes in active probes (as defined by",
  "upstream_form_help_26": "to consider a target healthy.",
  "upstream_form_help_27": "The hostname to use as an SNI (Server Name Identification) when performing active health checks using HTTPS. This is particularly useful when Targets are configured using IPs, so that the target host’s certificate can be verified with the proper SNI.",
  "concurrency": "Concurrency",
  "upstream_form_help_28": "Number of targets to check concurrently in active health checks.",
  "type": "Type",
  "upstream_form_help_29": "Whether to perform active health checks using",
  "or_just_attempt_a": "or just attempt a",
  "passive_health_checks": "Passive health checks",
  "upstream_form_help_30": "Number of HTTP failures in passive probes (as defined by",
  "upstream_form_help_31": "to consider a target unhealthy, as observed by passive health checks.",
  "unhealthy_http_statuses": "Unhealthy http statuses",
  "upstream_form_help_32": "An array of HTTP statuses which represent unhealthiness when produced by proxied traffic, as observed by passive health checks.",
  "upstream_form_help_33": "Number of TCP failures in passive probes to consider a target unhealthy.",
  "upstream_form_help_34": "Number of timeouts in proxied traffic to consider a target unhealthy, as observed by passive health checks.",
  "upstream_form_help_35": "Whether to perform passive health checks using",
  "upstream_form_help_36": "Possible values are tcp, http or https. Defaults to \"http\".",
  "upstream_form_help_37": "Number of successes in passive probes (as defined by",
  "upstream_form_help_38": "to consider a target healthy.",
  "healthy_http_statuses": "Healthy http statuses",
  "upstream_form_help_39": "An array of HTTP statuses which represent healthiness when produced by proxied traffic, as observed by passive health checks.",
  "create_upstream": "Create Upstream",
  "manage":"Manage",
  "details": "details",
  "create_user": "Create User",
  "requested_user_not_found": "Requested user not found",
  "save": "save",
  "cancel": "Cancel",
  "info": "Info",
  "Username": "Username",
  "first_name": "First Name",
  "active_connection": "Active connection",
  "Security": "Security",
  "Password": "Password",
  "Password_Confirmation": "Password Confirmation",
  "last_update": "Last update",
  "submit_user": "Submit User",
  "plugin_js_help_1": "A Plugin entity represents a plugin configuration that will be executed during the HTTP request/response workflow, and it's how you can add functionalities to APIs that run behind Kong, like Authentication or Rate Limiting for example.",
  "DASHBOARD": "DASHBOARD",
  "INFO": "INFO",
  "SERVICES": "SERVICES",
  "ROUTES": "ROUTES",
  "CONSUMERS": "CONSUMERS",
  "PLUGINS": "PLUGINS",
  "UPSTREAMS": "UPSTREAMS",
  "CERTIFICATES": "CERTIFICATES",
  "APPLICATION": "APPLICATION",
  "USERS": "USERS",
  "CONNECTIONS": "CONNECTIONS",
  "SNAPSHOTS": "SNAPSHOTS",
  "SETTINGS": "SETTINGS",
  "API GATEWAY": "API GATEWAY",
  "Node_Info": "Node Info",
  "Node_Info_detail": "Generic details about the node",
  "APIs": "APIs",
  "APIs_detail": "The API object describes an API that's being exposed by Kong. Kong needs to know how to retrieve the API when a consumer is calling it from the Proxy port. Each API object must specify a request host, a request path or both. Kong will proxy all requests to the API to the specified upstream URL.",
  "Edit API": "Edit API",
  "API Plugins": "API Plugins",
  "Manage API Plugins": "Manage API Plugins",
  "Certificates": "Certificates",
  "Certificates_detail": "A certificate object represents a public certificate/private key pair for an SSL certificate. These objects are used by Kong to handle SSL/TLS termination for encrypted requests. Certificates are optionally associated with SNI objects to tie a cert/key pair to one or more hostnames.",
  "Cluster": "Cluster",
  "Connections": "Connections",
  "Connections_detail": "Create connections to Kong Nodes and activate the one you want use.",
  "Consumers": "Consumers",
  "Consumers_detail": "The Consumer object represents a consumer - or a user - of an API. You can either rely on Kong as the primary datastore, or you can map the consumer list with your database to keep consistency between Kong and your existing primary datastore.",
  "Edit Consumer": "Edit Consumer",
  "Dashboard": "Dashboard",
  "Plugins": "Plugins",
  "Add_Global_Plugins": "Add Global Plugins",
  "Routes": "Routes",
  "Route": "Route",
  "Route Plugins": "Route Plugins",
  "Manage Route Plugins": "Manage Route Plugins",
  "Services": "Services",
  "Services_detail": "Service entities, as the name implies, are abstractions of each of your own upstream services. Examples of Services would be a data transformation microservice, a billing API, etc.",
  "Show Service": "Show Service",
  "Settings": "Settings",
  "Snapshots": "Snapshots",
  "Snapshots_detail": "Take snapshots of currently active nodes.<br>All <code>Services</code>, <code>Routes</code>, <code>APIs</code>, <code>Plugins</code>, <code>Consumers</code>, <code>Upstreams</code> and <code>Targets</code>will be saved and available for later import.",
  "Snapshot Details": "Snapshot Details",
  "Upstreams": "Upstreams",
  "Upstreams_detail": "The upstream object represents a virtual hostname and can be used to loadbalance incoming requests over multiple services (targets). So for example an upstream named",
  "Edit_Upstream": "Edit Upstream",
  "Users": "Users",
  "Users_detail": "Manage Konga users and user roles",
  "Create User": "Create User",
  "User profile": "User profile",
  "Routes_detail": "The Route entities defines rules to match client requests. Each Route is associated with a Service, and a Service may have multiple Routes associated to it. Every request matching a given Route will be proxied to its associated Service.",
  "Routes Details": "Routes Details",
  "Eligible consumers": "Eligible Consumers",
  "last_1": "An optional service description.",
  "Service Details": "Service Details",
  "Service":"Service",
  "show": "show",
  "route": "route",
  "Details": "Details",
  "Groups": "Groups",
  "Credentials": "Credentials",
  "Accessible Routes": "Accessible Routes",
  "custom_id": "custom_id",
  "Tags": "Tags",
  "Scope": "Scope",
  "edit consumer": "edit consumer",
  "USERNAME": "USERNAME",
  "CUSTOM_ID": "CUSTOM_ID",
  "TAGS": "TAGS",
  "CREATED": "CREATED"







}